services:
    _defaults:
        public: true

    # If you need to access services in a test, create an alias
    # and then fetch that alias from the container. As a convention,
    # aliases are prefixed with test. For example:
    #
    # test.App\Service\MyService: '@App\Service\MyService'

    test.StepupReadId\Application\PendingSession\ConfirmPendingSessionCommandHandler: '@StepupReadId\Application\PendingSession\ConfirmPendingSessionCommandHandler'
    test.StepupReadId\Application\PendingSession\GetPendingSessionQueryHandler: '@StepupReadId\Application\PendingSession\GetPendingSessionQueryHandler'
    test.StepupReadId\Application\ReadySession\CreateReadySessionCommandHandler: '@StepupReadId\Application\ReadySession\CreateReadySessionCommandHandler'
    test.StepupReadId\Application\ReadySession\GetStoredReadySessionQueryHandler: '@StepupReadId\Application\ReadySession\GetStoredReadySessionQueryHandler'
    test.StepupReadId\Application\PendingSession\RegisterPendingSessionCommandHandler: '@StepupReadId\Application\PendingSession\RegisterPendingSessionCommandHandler'
    test.StepupReadId\Domain\PendingSession\Services\PendingSessionRepositoryInterface: '@StepupReadId\Domain\PendingSession\Services\PendingSessionRepositoryInterface'
    test.StepupReadId\Domain\ReadySession\Services\ReadySessionStateInterface: '@StepupReadId\Domain\ReadySession\Services\ReadySessionStateInterface'
    test.http.read_id.submitter.client: '@stepup.http.read_id.submitter.client'
    test.http.read_id.viewer.client: '@stepup.http.read_id.viewer.client'
    test.Symfony\Component\Messenger\MessageBusInterface: '@Symfony\Component\Messenger\MessageBusInterface'
    test.Symfony\Contracts\HttpClient\HttpClientInterface: '@Symfony\Contracts\HttpClient\HttpClientInterface'


