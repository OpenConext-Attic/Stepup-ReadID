# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    surfnet_readid.connection.host: '%env(string:APP_READID_SERVER_FQDN)%'
    surfnet_readid.connection.submitter_token: '%env(string:APP_SUBMITTER_TOKEN)%'
    surfnet_readid.connection.viewer_token: '%env(string:APP_VIEWER_TOKEN)%'
    surfnet_readid.webhook_token: '%env(string:APP_WEBHOOK_TOKEN)%'
    surfnet_readid.opaque_id: '%env(string:APP_OPAQUE_ID)%'
    surfnet_readid.attributes_mapping: '%env(json:APP_ATTRIBUTES_MAPPING)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            Surfnet\GsspBundle\Saml\ResponseContextInterface $responseContext: '@surfnet_gssp.saml.reponse_context'
            Surfnet\GsspBundle\Service\ResponseServiceInterface $responseService: '@surfnet_gssp.service.response'
            Surfnet\GsspBundle\Service\StateHandlerInterface $stateHandler: '@surfnet_gssp.state_handler.service'
            Surfnet\GsspBundle\Service\ValueStore $store: '@surfnet_gssp.value_store.service'
            string $readIdWebhookToken: '%surfnet_readid.webhook_token%'
            string $readIdOpaqueId: '%surfnet_readid.opaque_id%'
            array $readIdAttributeMappings: '%surfnet_readid.attributes_mapping%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    StepupReadId\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    StepupReadId\Infrastructure\Controller\:
        resource: '../src/Infrastructure/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    command_handlers:
        namespace: StepupReadId\Application\
        resource: '%kernel.project_dir%/src/Application/**/*Handler.php'
        autoconfigure: false
        tags:
            - { name: messenger.message_handler, bus: messenger.bus.default }

    stepup.http.read_id.submitter.client:
        class: StepupReadId\Infrastructure\Services\ReadId\HttpReadIdClient
        autowire: false
        arguments:
            - '@http_client'
            - '%surfnet_readid.connection.host%'
            - '%surfnet_readid.connection.submitter_token%'

    stepup.http.read_id.viewer.client:
        class: StepupReadId\Infrastructure\Services\ReadId\HttpReadIdClient
        autowire: false
        arguments:
            - '@http_client'
            - '%surfnet_readid.connection.host%'
            - '%surfnet_readid.connection.viewer_token%'
